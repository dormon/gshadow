attribute vec4 position0;
attribute vec4 position1;
attribute vec4 position2;
attribute vec4 position3;
attribute vec4 position4;
uniform vec4 lightPosition;
uniform mat4 mvp;
int greaterVec(vec3 a,vec3 b){
  return int(dot(sign(a-b),vec3(4.0,2.0,1.0)));
}
int computeMult(vec3 A,vec3 B,vec3 C,vec4 L){
  vec3 n=cross(C-A,L.xyz-A*L.w);
  return int(sign(dot(n,B-A)));
}
void main(){
  int nofOpposite = int(position0.w);
  int vertexIDCCW = int(mod(float(int(position1.w)),float(4)));
  int vertexIDCW = int(mod(float(int(position1.w)/4),float(4)));
    int sideID = int(position1.w)/(4*4);
  vec4 P[4];
  P[0]=vec4(position0.xyz,1);
  P[1]=vec4(position1.xyz,1);
  P[2]=vec4(P[0].xyz*lightPosition.w-lightPosition.xyz,0);
  P[3]=vec4(P[1].xyz*lightPosition.w-lightPosition.xyz,0);
  int multiplicity=0;
    if(2 -2<nofOpposite){ if(greaterVec(P[0].xyz,position2.xyz)>0){ multiplicity+=computeMult(position2.xyz,P[0].xyz,P[1].xyz,lightPosition); }else{ if(greaterVec(P[1].xyz,position2.xyz)>0){ multiplicity-=computeMult(P[0].xyz,position2.xyz,P[1].xyz,lightPosition); }else{ multiplicity+=computeMult(P[0].xyz,P[1].xyz,position2.xyz,lightPosition); } } }
    if(3 -2<nofOpposite){ if(greaterVec(P[0].xyz,position3.xyz)>0){ multiplicity+=computeMult(position3.xyz,P[0].xyz,P[1].xyz,lightPosition); }else{ if(greaterVec(P[1].xyz,position3.xyz)>0){ multiplicity-=computeMult(P[0].xyz,position3.xyz,P[1].xyz,lightPosition); }else{ multiplicity+=computeMult(P[0].xyz,P[1].xyz,position3.xyz,lightPosition); } } }
    if(4 -2<nofOpposite){ if(greaterVec(P[0].xyz,position4.xyz)>0){ multiplicity+=computeMult(position4.xyz,P[0].xyz,P[1].xyz,lightPosition); }else{ if(greaterVec(P[1].xyz,position4.xyz)>0){ multiplicity-=computeMult(P[0].xyz,position4.xyz,P[1].xyz,lightPosition); }else{ multiplicity+=computeMult(P[0].xyz,P[1].xyz,position4.xyz,lightPosition); } } }
  if(sideID<int(abs(float(multiplicity)))){
    if(multiplicity>0)
      for(int i=0;i<4;++i)
        if(i==vertexIDCCW)gl_Position=mvp*P[i];
    if(multiplicity<0)
      for(int i=0;i<4;++i)
        if(i==vertexIDCW)gl_Position=mvp*P[i];
  }else
    gl_Position=vec4(0,0,0,0);
}
