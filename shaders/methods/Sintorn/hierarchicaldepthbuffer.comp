#version 430 core

//DO NOT EDIT ANYTHING BELOW THIS LINE

#ifndef WAVEFRONT_SIZE
  #define WAVEFRONT_SIZE 64
#endif//WAVEFRONT_SIZE

#ifndef MAX_LEVELS
  #define MAX_LEVELS 100
#endif//MAX_LEVELS


/*
1D WorkGroup
2D Dispatch
*/

#define FLOAT_MAX 1000.0f
#define HALF_WAVEFRONT (WAVEFRONT_SIZE/2)
#define NUM_ITERATION (int(ceil(log(WAVEFRONT_SIZE)/log(2))))

layout(local_size_x=WAVEFRONT_SIZE)in;

layout(std430,binding=0)buffer HDB{vec2 HDBData[];};

/*
LevelSizeInTiles



*/

uniform uvec2 WindowSize;
uniform uint  SrcOffset;
uniform uint  DstOffset;
uniform uint  DstLevel;
uniform uvec2 TileDivisibility[MAX_LEVELS];
uniform uvec2 TileSizeInPixels[MAX_LEVELS];


shared float Shared[WAVEFRONT_SIZE*2];

void main(){
	//skip useless tiles
	if(any(greaterThanEqual(gl_WorkGroupID.xy*TileSizeInPixels[DstLevel],WindowSize)))return;

  uvec2 LocalCoord=gl_WorkGroupID.xy*TileSizeInPixels[DstLevel];
  uint SampleIndex=0;
  for(uint level=0;level<=DstLevel;++level){//loop over levels
    uvec2 TileCoord  = LocalCoord/TileSizeInPixels[level];
    uint  TileIndex  = uint(dot(TileCoord.xy,uvec2(1u,TileDivisibility[level].x)));
    SampleIndex     *= WAVEFRONT_SIZE;
    SampleIndex     += TileIndex; 
    LocalCoord      &= (TileSizeInPixels[level]-1);
  }

	uint DstIndex=SampleIndex;
  uint SrcIndex=DstIndex*WAVEFRONT_SIZE+gl_LocalInvocationID.x;

	//cooperative read into shared memory
	Shared[(gl_LocalInvocationID.x<<1)+0]=
		HDBData[SrcOffset+SrcIndex].x;
	Shared[(gl_LocalInvocationID.x<<1)+1]=
		HDBData[SrcOffset+SrcIndex].y;

	//min: if(a>b)a:=b if(a-b>0)a:=b if((1-2*(DoMax))*(a-b)>0)a:=b
	//max: if(a<b)a:=b if(b-a>0)a:=b if((1-2*(DoMax))*(a-b)>0)a:=b
	uint DoMax=gl_LocalInvocationID.x&1;
	for(int l=0;l<NUM_ITERATION;++l){
		if(gl_LocalInvocationID.x<(WAVEFRONT_SIZE>>l)){
			uint BaseIndex=(gl_LocalInvocationID.x&(~1))<<l;
			float a=Shared[((BaseIndex       )<<1)+DoMax];
			float b=Shared[((BaseIndex+(1<<l))<<1)+DoMax];
#ifdef DO_NOT_COUNT_WITH_INFINITY
			if(a>=1)a=b;
			if(b>=1)b=a;
			//if(a<=-1)a=b;
			//if(b<=-1)b=a;
#endif
			if((1-2*int(DoMax))*(a-b)>=0)Shared[(BaseIndex<<1)+DoMax]=b;
		}
	}
	if(gl_LocalInvocationID.x<2)
		HDBData[DstOffset+DstIndex][gl_LocalInvocationID.x]=Shared[gl_LocalInvocationID.x];
}


